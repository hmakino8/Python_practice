{"ast":null,"code":"var _jsxFileName = \"/Users/hiroaki/github.com/Python_practice/todo-env/frontend/src/components/TasksIncomplete.jsx.jsx\";\nimport styles from \"./styles/TasksIncomplete.module.css\";\nimport { Task } from \"./Task\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport const TasksIncomplete = props => {\n  const {\n    list,\n    setTasks,\n    setListGroup,\n    modalData,\n    setModalData,\n    setIsModalOpen\n  } = props;\n  const tasksIncomplete = list.tasks.filter(task => !task.isComplete);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: styles.wrapper,\n    children: tasksIncomplete.map(taskIncomplete => /*#__PURE__*/_jsxDEV(Task, {\n      task: taskIncomplete,\n      setTasks: setTasks,\n      setListGroup: setListGroup,\n      modalData: modalData,\n      setModalData: setModalData,\n      setIsModalOpen: setIsModalOpen\n    }, taskIncomplete.taskId, false, {\n      fileName: _jsxFileName,\n      lineNumber: 18,\n      columnNumber: 9\n    }, this))\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 16,\n    columnNumber: 5\n  }, this);\n};\n_c = TasksIncomplete;\nvar _c;\n$RefreshReg$(_c, \"TasksIncomplete\");","map":{"version":3,"names":["styles","Task","jsxDEV","_jsxDEV","TasksIncomplete","props","list","setTasks","setListGroup","modalData","setModalData","setIsModalOpen","tasksIncomplete","tasks","filter","task","isComplete","className","wrapper","children","map","taskIncomplete","taskId","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["/Users/hiroaki/github.com/Python_practice/todo-env/frontend/src/components/TasksIncomplete.jsx.jsx"],"sourcesContent":["import styles from \"./styles/TasksIncomplete.module.css\";\nimport { Task } from \"./Task\";\n\nexport const TasksIncomplete = (props) => {\n  const {\n    list,\n    setTasks,\n    setListGroup,\n    modalData,\n    setModalData,\n    setIsModalOpen,\n  } = props;\n  const tasksIncomplete = list.tasks.filter((task) => !task.isComplete);\n\n  return (\n    <div className={styles.wrapper}>\n      {tasksIncomplete.map((taskIncomplete) => (\n        <Task\n          key={taskIncomplete.taskId}\n          task={taskIncomplete}\n          setTasks={setTasks}\n          setListGroup={setListGroup}\n          modalData={modalData}\n          setModalData={setModalData}\n          setIsModalOpen={setIsModalOpen}\n        />\n      ))}\n    </div>\n  );\n};\n"],"mappings":";AAAA,OAAOA,MAAM,MAAM,qCAAqC;AACxD,SAASC,IAAI,QAAQ,QAAQ;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE9B,OAAO,MAAMC,eAAe,GAAIC,KAAK,IAAK;EACxC,MAAM;IACJC,IAAI;IACJC,QAAQ;IACRC,YAAY;IACZC,SAAS;IACTC,YAAY;IACZC;EACF,CAAC,GAAGN,KAAK;EACT,MAAMO,eAAe,GAAGN,IAAI,CAACO,KAAK,CAACC,MAAM,CAAEC,IAAI,IAAK,CAACA,IAAI,CAACC,UAAU,CAAC;EAErE,oBACEb,OAAA;IAAKc,SAAS,EAAEjB,MAAM,CAACkB,OAAQ;IAAAC,QAAA,EAC5BP,eAAe,CAACQ,GAAG,CAAEC,cAAc,iBAClClB,OAAA,CAACF,IAAI;MAEHc,IAAI,EAAEM,cAAe;MACrBd,QAAQ,EAAEA,QAAS;MACnBC,YAAY,EAAEA,YAAa;MAC3BC,SAAS,EAAEA,SAAU;MACrBC,YAAY,EAAEA,YAAa;MAC3BC,cAAc,EAAEA;IAAe,GAN1BU,cAAc,CAACC,MAAM;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAO3B,CACF;EAAC;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACC,CAAC;AAEV,CAAC;AAACC,EAAA,GA1BWvB,eAAe;AAAA,IAAAuB,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}