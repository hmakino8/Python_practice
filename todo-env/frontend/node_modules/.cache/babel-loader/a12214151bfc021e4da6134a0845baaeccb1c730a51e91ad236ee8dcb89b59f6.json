{"ast":null,"code":"var _jsxFileName = \"/Users/hiroaki/github.com/Python_practice/todo-env/frontend/src/components/InputDeadline.jsx\",\n  _s = $RefreshSig$();\nimport { useState, useEffect, useCallback } from \"react\";\nimport { IconClock } from \"./Icon\";\nimport classNames from \"classnames\";\nimport styles from \"./styles/InputDeadline.module.css\";\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nexport const InputDeadline = ({\n  task,\n  handleUpdateTaskInfo\n}) => {\n  _s();\n  const [toggleDaysLeft, setToggleDaysLeft] = useState(false);\n  const [message, setMessage] = useState(\"\");\n  const calculateWidth = text => {\n    let width = 0;\n    for (let char of text) {\n      const code = char.charCodeAt(0);\n      if (code >= 0x00 && code <= 0x7f) {\n        width += 1;\n      } else {\n        width += 2;\n      }\n    }\n    return width;\n  };\n  const messageWidth = calculateWidth(message);\n  const calculateDaysLeft = deadline => {\n    const deadlineDate = new Date(deadline);\n    const now = new Date();\n    const timeDiff = deadlineDate - now;\n    const daysLeft = Math.ceil(timeDiff / (1000 * 60 * 60 * 24));\n    return daysLeft;\n  };\n  const daysLeftMessage = useCallback(deadline => {\n    const daysLeft = calculateDaysLeft(deadline);\n    switch (true) {\n      case daysLeft >= 2:\n        return `${daysLeft}日後`;\n      case daysLeft === 1:\n        return `明日`;\n      case daysLeft === 0:\n        return `今日`;\n      case daysLeft === -1:\n        return `昨日`;\n      default:\n        return `${-daysLeft}日前`;\n    }\n  }, []);\n  useEffect(() => {\n    setMessage(daysLeftMessage(task.deadline));\n  }, [task.deadline, daysLeftMessage]);\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(IconClock, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 7\n    }, this), toggleDaysLeft ? /*#__PURE__*/_jsxDEV(\"input\", {\n      name: \"deadline\",\n      value: task.deadline,\n      \"data-task-id\": task.taskId,\n      type: \"datetime-local\",\n      onChange: handleUpdateTaskInfo,\n      onBlur: () => setToggleDaysLeft(prev => !prev),\n      className: styles.daysLeft\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 9\n    }, this) : /*#__PURE__*/_jsxDEV(\"input\", {\n      readOnly: true,\n      value: message,\n      onClick: () => setToggleDaysLeft(prev => !prev),\n      style: {\n        width: `${messageWidth}ch`\n      },\n      className: classNames(styles.daysLeftMessage, {\n        [styles.daysLeftMessageExpired]: calculateDaysLeft(task.deadline) < 0\n      })\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 71,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true);\n};\n_s(InputDeadline, \"CQwfmyij+x7z2HZj57LiC+xDoYc=\");\n_c = InputDeadline;\nvar _c;\n$RefreshReg$(_c, \"InputDeadline\");","map":{"version":3,"names":["useState","useEffect","useCallback","IconClock","classNames","styles","jsxDEV","_jsxDEV","Fragment","_Fragment","InputDeadline","task","handleUpdateTaskInfo","_s","toggleDaysLeft","setToggleDaysLeft","message","setMessage","calculateWidth","text","width","char","code","charCodeAt","messageWidth","calculateDaysLeft","deadline","deadlineDate","Date","now","timeDiff","daysLeft","Math","ceil","daysLeftMessage","children","fileName","_jsxFileName","lineNumber","columnNumber","name","value","taskId","type","onChange","onBlur","prev","className","readOnly","onClick","style","daysLeftMessageExpired","_c","$RefreshReg$"],"sources":["/Users/hiroaki/github.com/Python_practice/todo-env/frontend/src/components/InputDeadline.jsx"],"sourcesContent":["import { useState, useEffect, useCallback } from \"react\";\nimport { IconClock } from \"./Icon\";\nimport classNames from \"classnames\";\nimport styles from \"./styles/InputDeadline.module.css\";\n\nexport const InputDeadline = ({ task, handleUpdateTaskInfo }) => {\n  const [toggleDaysLeft, setToggleDaysLeft] = useState(false);\n  const [message, setMessage] = useState(\"\");\n\n  const calculateWidth = (text) => {\n    let width = 0;\n\n    for (let char of text) {\n      const code = char.charCodeAt(0);\n\n      if (code >= 0x00 && code <= 0x7f) {\n        width += 1;\n      } else {\n        width += 2;\n      }\n    }\n    return width;\n  };\n\n  const messageWidth = calculateWidth(message);\n\n  const calculateDaysLeft = (deadline) => {\n    const deadlineDate = new Date(deadline);\n    const now = new Date();\n    const timeDiff = deadlineDate - now;\n    const daysLeft = Math.ceil(timeDiff / (1000 * 60 * 60 * 24));\n\n    return daysLeft;\n  };\n\n  const daysLeftMessage = useCallback((deadline) => {\n    const daysLeft = calculateDaysLeft(deadline);\n\n    switch (true) {\n      case daysLeft >= 2:\n        return `${daysLeft}日後`;\n      case daysLeft === 1:\n        return `明日`;\n      case daysLeft === 0:\n        return `今日`;\n      case daysLeft === -1:\n        return `昨日`;\n      default:\n        return `${-daysLeft}日前`;\n    }\n  }, []);\n\n  useEffect(() => {\n    setMessage(daysLeftMessage(task.deadline));\n  }, [task.deadline, daysLeftMessage]);\n\n  return (\n    <>\n      <IconClock />\n      {toggleDaysLeft ? (\n        <input\n          name={\"deadline\"}\n          value={task.deadline}\n          data-task-id={task.taskId}\n          type=\"datetime-local\"\n          onChange={handleUpdateTaskInfo}\n          onBlur={() => setToggleDaysLeft((prev) => !prev)}\n          className={styles.daysLeft}\n        />\n      ) : (\n        <input\n          readOnly\n          value={message}\n          onClick={() => setToggleDaysLeft((prev) => !prev)}\n          style={{ width: `${messageWidth}ch` }}\n          className={classNames(styles.daysLeftMessage, {\n            [styles.daysLeftMessageExpired]:\n              calculateDaysLeft(task.deadline) < 0,\n          })}\n        />\n      )}\n    </>\n  );\n};\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}