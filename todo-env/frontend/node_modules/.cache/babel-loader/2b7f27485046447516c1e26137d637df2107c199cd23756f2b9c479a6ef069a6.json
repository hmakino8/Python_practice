{"ast":null,"code":"var _jsxFileName = \"/Users/hiroaki/github.com/Python_practice/todo-env/frontend/src/components/MenuBar.jsx\",\n  _s = $RefreshSig$();\nimport { useState } from \"react\";\nimport { ButtonDisplayModal } from \"./ButtonDisplayModal\";\nimport { generateId } from \"../utils/utils\";\nimport { PLACEHOLDER } from \"../utils/constants\";\nimport { ButtonCreateTaskList } from \"./ButtonCreateTaskList\";\nimport { IconKeyboardControlKey, IconKeyboardArrowDown } from \"./Icon\";\nimport styles from \"./styles/MenuBar.module.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport const MenuBar = ({\n  listGroup,\n  setListGroup,\n  setIsModalOpen\n}) => {\n  _s();\n  const [listName, setListName] = useState(\"\");\n  const [isActiveCreateList, setIsActiveCreateList] = useState(false);\n  const [isListNameVisible, setIsListNameVisible] = useState(true);\n  const handleKeyDown = e => {\n    if (e.key === \"Enter\" && listName.trim() !== \"\") {\n      setListGroup(prevListGroup => [{\n        listId: generateId(),\n        listName: listName,\n        isDisplay: true,\n        isDefault: false,\n        tasks: []\n      }, ...prevListGroup]);\n      setListName(\"\");\n      if (isActiveCreateList) setIsActiveCreateList(false);\n    }\n  };\n  const handleListContents = e => {\n    const listId = e.target.dataset.listId;\n    setListGroup(prevListGroup => prevListGroup.map(prevList => prevList.listId === listId ? {\n      ...prevList,\n      isDisplay: !prevList.isDisplay\n    } : prevList));\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: styles.container,\n    children: [/*#__PURE__*/_jsxDEV(ButtonDisplayModal, {\n      setIsModalOpen: setIsModalOpen\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(ButtonCreateTaskList, {\n      isActiveCreateList: isActiveCreateList,\n      setIsActiveCreateList: setIsActiveCreateList\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 7\n    }, this), isActiveCreateList && /*#__PURE__*/_jsxDEV(\"input\", {\n      autoFocus: true,\n      value: listName,\n      placeholder: PLACEHOLDER.CREATE_TASK_LIST,\n      onChange: e => setListName(e.target.value),\n      onBlur: () => isActiveCreateList && setIsActiveCreateList(false),\n      onKeyDown: handleKeyDown,\n      className: styles.createList\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        fontSize: \"0.9rem\",\n        position: \"absolute\",\n        width: \"90%\",\n        top: \"210px\",\n        display: \"flex\",\n        alignItems: \"center\",\n        justifyContent: \"space-between\",\n        cursor: \"pointer\"\n      },\n      children: [\"\\u30EA\\u30B9\\u30C8\", /*#__PURE__*/_jsxDEV(\"button\", {\n        style: {\n          display: \"flex\",\n          justifyContent: \"center\",\n          alignItems: \"center\",\n          padding: \"5px\",\n          border: \"none\",\n          borderRadius: \"100%\"\n        },\n        onClick: () => setIsListNameVisible(prev => !prev),\n        children: isListNameVisible ? /*#__PURE__*/_jsxDEV(IconKeyboardControlKey, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 87,\n          columnNumber: 13\n        }, this) : /*#__PURE__*/_jsxDEV(IconKeyboardArrowDown, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 89,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 75,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 7\n    }, this), isListNameVisible && listGroup && listGroup.map((list, index) => /*#__PURE__*/_jsxDEV(\"label\", {\n      className: \"menu-list\",\n      style: {\n        position: \"absolute\",\n        top: `${240 + 35 * index}px`,\n        display: \"flex\",\n        alignItems: \"center\",\n        height: \"35px\",\n        width: \"80%\",\n        border: \"none\",\n        borderRadius: \"20px\",\n        fontSize: \"1rem\",\n        paddingLeft: \"5px\"\n      },\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        style: {\n          marginRight: \"15px\",\n          padding: \"20px\"\n        },\n        type: \"checkBox\",\n        \"data-list-id\": list.listId,\n        checked: list.isDisplay,\n        onChange: handleListContents,\n        disabled: list.isDefault\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 112,\n        columnNumber: 13\n      }, this), list.listName]\n    }, list.listId, true, {\n      fileName: _jsxFileName,\n      lineNumber: 96,\n      columnNumber: 11\n    }, this))]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 45,\n    columnNumber: 5\n  }, this);\n};\n_s(MenuBar, \"rm1qcXuM0FlI/zEpHahJtAR1ZBM=\");\n_c = MenuBar;\nvar _c;\n$RefreshReg$(_c, \"MenuBar\");","map":{"version":3,"names":["useState","ButtonDisplayModal","generateId","PLACEHOLDER","ButtonCreateTaskList","IconKeyboardControlKey","IconKeyboardArrowDown","styles","jsxDEV","_jsxDEV","MenuBar","listGroup","setListGroup","setIsModalOpen","_s","listName","setListName","isActiveCreateList","setIsActiveCreateList","isListNameVisible","setIsListNameVisible","handleKeyDown","e","key","trim","prevListGroup","listId","isDisplay","isDefault","tasks","handleListContents","target","dataset","map","prevList","className","container","children","fileName","_jsxFileName","lineNumber","columnNumber","autoFocus","value","placeholder","CREATE_TASK_LIST","onChange","onBlur","onKeyDown","createList","style","fontSize","position","width","top","display","alignItems","justifyContent","cursor","padding","border","borderRadius","onClick","prev","list","index","height","paddingLeft","marginRight","type","checked","disabled","_c","$RefreshReg$"],"sources":["/Users/hiroaki/github.com/Python_practice/todo-env/frontend/src/components/MenuBar.jsx"],"sourcesContent":["import { useState } from \"react\";\nimport { ButtonDisplayModal } from \"./ButtonDisplayModal\";\nimport { generateId } from \"../utils/utils\";\nimport { PLACEHOLDER } from \"../utils/constants\";\nimport { ButtonCreateTaskList } from \"./ButtonCreateTaskList\";\nimport { IconKeyboardControlKey, IconKeyboardArrowDown } from \"./Icon\";\nimport styles from \"./styles/MenuBar.module.css\";\n\nexport const MenuBar = ({ listGroup, setListGroup, setIsModalOpen }) => {\n  const [listName, setListName] = useState(\"\");\n  const [isActiveCreateList, setIsActiveCreateList] = useState(false);\n  const [isListNameVisible, setIsListNameVisible] = useState(true);\n\n  const handleKeyDown = (e) => {\n    if (e.key === \"Enter\" && listName.trim() !== \"\") {\n      setListGroup((prevListGroup) => [\n        {\n          listId: generateId(),\n          listName: listName,\n          isDisplay: true,\n          isDefault: false,\n          tasks: [],\n        },\n        ...prevListGroup,\n      ]);\n\n      setListName(\"\");\n      if (isActiveCreateList) setIsActiveCreateList(false);\n    }\n  };\n\n  const handleListContents = (e) => {\n    const listId = e.target.dataset.listId;\n\n    setListGroup((prevListGroup) =>\n      prevListGroup.map((prevList) =>\n        prevList.listId === listId\n          ? { ...prevList, isDisplay: !prevList.isDisplay }\n          : prevList\n      )\n    );\n  };\n\n  return (\n    <div className={styles.container}>\n      <ButtonDisplayModal setIsModalOpen={setIsModalOpen} />\n      <ButtonCreateTaskList\n        isActiveCreateList={isActiveCreateList}\n        setIsActiveCreateList={setIsActiveCreateList}\n      />\n      {isActiveCreateList && (\n        <input\n          autoFocus\n          value={listName}\n          placeholder={PLACEHOLDER.CREATE_TASK_LIST}\n          onChange={(e) => setListName(e.target.value)}\n          onBlur={() => isActiveCreateList && setIsActiveCreateList(false)}\n          onKeyDown={handleKeyDown}\n          className={styles.createList}\n        />\n      )}\n      <div\n        style={{\n          fontSize: \"0.9rem\",\n          position: \"absolute\",\n          width: \"90%\",\n          top: \"210px\",\n          display: \"flex\",\n          alignItems: \"center\",\n          justifyContent: \"space-between\",\n          cursor: \"pointer\",\n        }}\n      >\n        リスト\n        <button\n          style={{\n            display: \"flex\",\n            justifyContent: \"center\",\n            alignItems: \"center\",\n            padding: \"5px\",\n            border: \"none\",\n            borderRadius: \"100%\",\n          }}\n          onClick={() => setIsListNameVisible((prev) => !prev)}\n        >\n          {isListNameVisible ? (\n            <IconKeyboardControlKey />\n          ) : (\n            <IconKeyboardArrowDown />\n          )}\n        </button>\n      </div>\n      {isListNameVisible &&\n        listGroup &&\n        listGroup.map((list, index) => (\n          <label\n            className=\"menu-list\"\n            key={list.listId}\n            style={{\n              position: \"absolute\",\n              top: `${240 + 35 * index}px`,\n              display: \"flex\",\n              alignItems: \"center\",\n              height: \"35px\",\n              width: \"80%\",\n              border: \"none\",\n              borderRadius: \"20px\",\n              fontSize: \"1rem\",\n              paddingLeft: \"5px\",\n            }}\n          >\n            <input\n              style={{\n                marginRight: \"15px\",\n                padding: \"20px\",\n              }}\n              type=\"checkBox\"\n              data-list-id={list.listId}\n              checked={list.isDisplay}\n              onChange={handleListContents}\n              disabled={list.isDefault}\n            />\n            {list.listName}\n          </label>\n        ))}\n    </div>\n  );\n};\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}