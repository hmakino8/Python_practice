{"ast":null,"code":"var _jsxFileName = \"/Users/hiroaki/github.com/Python_practice/todo-env/frontend/src/layout/Body.jsx\",\n  _s = $RefreshSig$();\nimport { useState, useEffect } from \"react\";\nimport { Dashboard } from \"./Dashboard\";\nimport { ManageTaskModal } from \"../components/ManageTaskModal\";\nimport { MenuBar } from \"../components/MenuBar\";\nimport { initModalData, initListGroup, initTasks } from \"../utils/initializer\";\nimport styles from \"./styles/Body.module.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport const Body = ({\n  isMenuOpen,\n  searchKey\n}) => {\n  _s();\n  const DEBUG = true;\n  const [modalData, setModalData] = useState(initModalData());\n  const [tasks, setTasks] = useState(initTasks(DEBUG));\n  const [listGroup, setListGroup] = useState(initListGroup(DEBUG));\n  const [isModalOpen, setIsModalOpen] = useState(false);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: styles.body,\n    children: [isModalOpen && /*#__PURE__*/_jsxDEV(ManageTaskModal, {\n      modalData: modalData,\n      setModalData: setModalData,\n      setIsModalOpen: setIsModalOpen,\n      setTasks: setTasks,\n      listGroup: listGroup\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 19,\n      columnNumber: 9\n    }, this), isMenuOpen && /*#__PURE__*/_jsxDEV(MenuBar, {\n      setIsModalOpen: setIsModalOpen,\n      listGroup: listGroup,\n      setListGroup: setListGroup\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(Dashboard, {\n      tasks: tasks,\n      setTasks: setTasks,\n      setIsModalOpen: setIsModalOpen,\n      modalData: modalData,\n      setModalData: setModalData,\n      listGroup: listGroup,\n      setListGroup: setListGroup,\n      isMenuOpen: isMenuOpen,\n      searchKey: searchKey\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 17,\n    columnNumber: 5\n  }, this);\n};\n_s(Body, \"K94UcfpKTIjI5jxdFIevSwFGAcs=\");\n_c = Body;\nvar _c;\n$RefreshReg$(_c, \"Body\");","map":{"version":3,"names":["useState","useEffect","Dashboard","ManageTaskModal","MenuBar","initModalData","initListGroup","initTasks","styles","jsxDEV","_jsxDEV","Body","isMenuOpen","searchKey","_s","DEBUG","modalData","setModalData","tasks","setTasks","listGroup","setListGroup","isModalOpen","setIsModalOpen","className","body","children","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["/Users/hiroaki/github.com/Python_practice/todo-env/frontend/src/layout/Body.jsx"],"sourcesContent":["import { useState, useEffect } from \"react\";\nimport { Dashboard } from \"./Dashboard\";\nimport { ManageTaskModal } from \"../components/ManageTaskModal\";\nimport { MenuBar } from \"../components/MenuBar\";\nimport { initModalData, initListGroup, initTasks } from \"../utils/initializer\";\nimport styles from \"./styles/Body.module.css\";\n\nexport const Body = ({ isMenuOpen, searchKey }) => {\n  const DEBUG = true;\n\n  const [modalData, setModalData] = useState(initModalData());\n  const [tasks, setTasks] = useState(initTasks(DEBUG));\n  const [listGroup, setListGroup] = useState(initListGroup(DEBUG));\n  const [isModalOpen, setIsModalOpen] = useState(false);\n\n  return (\n    <div className={styles.body}>\n      {isModalOpen && (\n        <ManageTaskModal\n          modalData={modalData}\n          setModalData={setModalData}\n          setIsModalOpen={setIsModalOpen}\n          setTasks={setTasks}\n          listGroup={listGroup}\n        />\n      )}\n      {isMenuOpen && (\n        <MenuBar\n          setIsModalOpen={setIsModalOpen}\n          listGroup={listGroup}\n          setListGroup={setListGroup}\n        />\n      )}\n      <Dashboard\n        tasks={tasks}\n        setTasks={setTasks}\n        setIsModalOpen={setIsModalOpen}\n        modalData={modalData}\n        setModalData={setModalData}\n        listGroup={listGroup}\n        setListGroup={setListGroup}\n        isMenuOpen={isMenuOpen}\n        searchKey={searchKey}\n      />\n    </div>\n  );\n};\n"],"mappings":";;AAAA,SAASA,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAC3C,SAASC,SAAS,QAAQ,aAAa;AACvC,SAASC,eAAe,QAAQ,+BAA+B;AAC/D,SAASC,OAAO,QAAQ,uBAAuB;AAC/C,SAASC,aAAa,EAAEC,aAAa,EAAEC,SAAS,QAAQ,sBAAsB;AAC9E,OAAOC,MAAM,MAAM,0BAA0B;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE9C,OAAO,MAAMC,IAAI,GAAGA,CAAC;EAAEC,UAAU;EAAEC;AAAU,CAAC,KAAK;EAAAC,EAAA;EACjD,MAAMC,KAAK,GAAG,IAAI;EAElB,MAAM,CAACC,SAAS,EAAEC,YAAY,CAAC,GAAGjB,QAAQ,CAACK,aAAa,CAAC,CAAC,CAAC;EAC3D,MAAM,CAACa,KAAK,EAAEC,QAAQ,CAAC,GAAGnB,QAAQ,CAACO,SAAS,CAACQ,KAAK,CAAC,CAAC;EACpD,MAAM,CAACK,SAAS,EAAEC,YAAY,CAAC,GAAGrB,QAAQ,CAACM,aAAa,CAACS,KAAK,CAAC,CAAC;EAChE,MAAM,CAACO,WAAW,EAAEC,cAAc,CAAC,GAAGvB,QAAQ,CAAC,KAAK,CAAC;EAErD,oBACEU,OAAA;IAAKc,SAAS,EAAEhB,MAAM,CAACiB,IAAK;IAAAC,QAAA,GACzBJ,WAAW,iBACVZ,OAAA,CAACP,eAAe;MACda,SAAS,EAAEA,SAAU;MACrBC,YAAY,EAAEA,YAAa;MAC3BM,cAAc,EAAEA,cAAe;MAC/BJ,QAAQ,EAAEA,QAAS;MACnBC,SAAS,EAAEA;IAAU;MAAAO,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACtB,CACF,EACAlB,UAAU,iBACTF,OAAA,CAACN,OAAO;MACNmB,cAAc,EAAEA,cAAe;MAC/BH,SAAS,EAAEA,SAAU;MACrBC,YAAY,EAAEA;IAAa;MAAAM,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAC5B,CACF,eACDpB,OAAA,CAACR,SAAS;MACRgB,KAAK,EAAEA,KAAM;MACbC,QAAQ,EAAEA,QAAS;MACnBI,cAAc,EAAEA,cAAe;MAC/BP,SAAS,EAAEA,SAAU;MACrBC,YAAY,EAAEA,YAAa;MAC3BG,SAAS,EAAEA,SAAU;MACrBC,YAAY,EAAEA,YAAa;MAC3BT,UAAU,EAAEA,UAAW;MACvBC,SAAS,EAAEA;IAAU;MAAAc,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACtB,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACC,CAAC;AAEV,CAAC;AAAChB,EAAA,CAvCWH,IAAI;AAAAoB,EAAA,GAAJpB,IAAI;AAAA,IAAAoB,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}