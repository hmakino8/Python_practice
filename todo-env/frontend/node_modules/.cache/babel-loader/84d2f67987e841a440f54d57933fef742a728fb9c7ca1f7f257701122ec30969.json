{"ast":null,"code":"var _jsxFileName = \"/Users/hiroaki/github.com/Python_practice/todo-env/frontend/src/components/MoreOptions.jsx\",\n  _s = $RefreshSig$();\nimport { useState, useEffect, useRef } from \"react\";\nimport { ListMoreOptions } from \"./ListMoreOptions\";\nimport { TaskMoreOptions } from \"./TaskMoreOptions\";\nimport { ButtonMoreOptions } from \"./ButtonMoreOptions\";\nimport styles from \"./styles/MoreOptions.module.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport const MoreOptions = props => {\n  _s();\n  const {\n    list,\n    setListGroup,\n    task,\n    setTasks,\n    setIsModalOpen,\n    setModalData\n  } = props;\n  const [isOpen, setIsOpen] = useState(false);\n  const dropdownRef = useRef(null);\n  useEffect(() => {\n    const handleClickOutside = e => {\n      var _dropdownRef$current;\n      if (!((_dropdownRef$current = dropdownRef.current) !== null && _dropdownRef$current !== void 0 && _dropdownRef$current.contains(e.target))) {\n        setIsOpen(false);\n      }\n    };\n    document.addEventListener(\"mousedown\", handleClickOutside);\n    return () => {\n      document.removeEventListener(\"mousedown\", handleClickOutside);\n    };\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: styles.wrapper,\n    children: [/*#__PURE__*/_jsxDEV(ButtonMoreOptions, {\n      list: list,\n      setIsOpen: setIsOpen\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 7\n    }, this), isOpen && (list ? /*#__PURE__*/_jsxDEV(ListMoreOptions, {\n      list: list,\n      setListGroup: setListGroup,\n      dropdownRef: dropdownRef\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 11\n    }, this) : /*#__PURE__*/_jsxDEV(TaskMoreOptions, {\n      task: task,\n      setTasks: setTasks,\n      setIsModalOpen: setIsModalOpen,\n      setModalData: setModalData,\n      dropdownRef: dropdownRef\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 11\n    }, this))]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 29,\n    columnNumber: 5\n  }, this);\n};\n_s(MoreOptions, \"uhOyve9TWk+bvhPJTPlaMsUEQAY=\");\n_c = MoreOptions;\nvar _c;\n$RefreshReg$(_c, \"MoreOptions\");","map":{"version":3,"names":["useState","useEffect","useRef","ListMoreOptions","TaskMoreOptions","ButtonMoreOptions","styles","jsxDEV","_jsxDEV","MoreOptions","props","_s","list","setListGroup","task","setTasks","setIsModalOpen","setModalData","isOpen","setIsOpen","dropdownRef","handleClickOutside","e","_dropdownRef$current","current","contains","target","document","addEventListener","removeEventListener","className","wrapper","children","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["/Users/hiroaki/github.com/Python_practice/todo-env/frontend/src/components/MoreOptions.jsx"],"sourcesContent":["import { useState, useEffect, useRef } from \"react\";\nimport { ListMoreOptions } from \"./ListMoreOptions\";\nimport { TaskMoreOptions } from \"./TaskMoreOptions\";\nimport { ButtonMoreOptions } from \"./ButtonMoreOptions\";\nimport styles from \"./styles/MoreOptions.module.css\";\n\nexport const MoreOptions = (props) => {\n  const { list, setListGroup, task, setTasks, setIsModalOpen, setModalData } =\n    props;\n\n  const [isOpen, setIsOpen] = useState(false);\n  const dropdownRef = useRef(null);\n\n  useEffect(() => {\n    const handleClickOutside = (e) => {\n      if (!dropdownRef.current?.contains(e.target)) {\n        setIsOpen(false);\n      }\n    };\n\n    document.addEventListener(\"mousedown\", handleClickOutside);\n\n    return () => {\n      document.removeEventListener(\"mousedown\", handleClickOutside);\n    };\n  }, []);\n\n  return (\n    <div className={styles.wrapper}>\n      <ButtonMoreOptions list={list} setIsOpen={setIsOpen} />\n      {isOpen &&\n        (list ? (\n          <ListMoreOptions\n            list={list}\n            setListGroup={setListGroup}\n            dropdownRef={dropdownRef}\n          />\n        ) : (\n          <TaskMoreOptions\n            task={task}\n            setTasks={setTasks}\n            setIsModalOpen={setIsModalOpen}\n            setModalData={setModalData}\n            dropdownRef={dropdownRef}\n          />\n        ))}\n    </div>\n  );\n};\n"],"mappings":";;AAAA,SAASA,QAAQ,EAAEC,SAAS,EAAEC,MAAM,QAAQ,OAAO;AACnD,SAASC,eAAe,QAAQ,mBAAmB;AACnD,SAASC,eAAe,QAAQ,mBAAmB;AACnD,SAASC,iBAAiB,QAAQ,qBAAqB;AACvD,OAAOC,MAAM,MAAM,iCAAiC;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAErD,OAAO,MAAMC,WAAW,GAAIC,KAAK,IAAK;EAAAC,EAAA;EACpC,MAAM;IAAEC,IAAI;IAAEC,YAAY;IAAEC,IAAI;IAAEC,QAAQ;IAAEC,cAAc;IAAEC;EAAa,CAAC,GACxEP,KAAK;EAEP,MAAM,CAACQ,MAAM,EAAEC,SAAS,CAAC,GAAGnB,QAAQ,CAAC,KAAK,CAAC;EAC3C,MAAMoB,WAAW,GAAGlB,MAAM,CAAC,IAAI,CAAC;EAEhCD,SAAS,CAAC,MAAM;IACd,MAAMoB,kBAAkB,GAAIC,CAAC,IAAK;MAAA,IAAAC,oBAAA;MAChC,IAAI,GAAAA,oBAAA,GAACH,WAAW,CAACI,OAAO,cAAAD,oBAAA,eAAnBA,oBAAA,CAAqBE,QAAQ,CAACH,CAAC,CAACI,MAAM,CAAC,GAAE;QAC5CP,SAAS,CAAC,KAAK,CAAC;MAClB;IACF,CAAC;IAEDQ,QAAQ,CAACC,gBAAgB,CAAC,WAAW,EAAEP,kBAAkB,CAAC;IAE1D,OAAO,MAAM;MACXM,QAAQ,CAACE,mBAAmB,CAAC,WAAW,EAAER,kBAAkB,CAAC;IAC/D,CAAC;EACH,CAAC,EAAE,EAAE,CAAC;EAEN,oBACEb,OAAA;IAAKsB,SAAS,EAAExB,MAAM,CAACyB,OAAQ;IAAAC,QAAA,gBAC7BxB,OAAA,CAACH,iBAAiB;MAACO,IAAI,EAAEA,IAAK;MAACO,SAAS,EAAEA;IAAU;MAAAc,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CAAC,EACtDlB,MAAM,KACJN,IAAI,gBACHJ,OAAA,CAACL,eAAe;MACdS,IAAI,EAAEA,IAAK;MACXC,YAAY,EAAEA,YAAa;MAC3BO,WAAW,EAAEA;IAAY;MAAAa,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAC1B,CAAC,gBAEF5B,OAAA,CAACJ,eAAe;MACdU,IAAI,EAAEA,IAAK;MACXC,QAAQ,EAAEA,QAAS;MACnBC,cAAc,EAAEA,cAAe;MAC/BC,YAAY,EAAEA,YAAa;MAC3BG,WAAW,EAAEA;IAAY;MAAAa,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAC1B,CACF,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACD,CAAC;AAEV,CAAC;AAACzB,EAAA,CA1CWF,WAAW;AAAA4B,EAAA,GAAX5B,WAAW;AAAA,IAAA4B,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}