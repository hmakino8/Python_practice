{"ast":null,"code":"var _jsxFileName = \"/Users/hiroaki/github.com/Python_practice/todo-env/frontend/src/components/Task.jsx\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useRef, useState } from \"react\";\nimport { InputCheckbox } from \"./InputCheckbox\";\nimport { InputTitle } from \"./InputTitle\";\nimport { SelectPriority } from \"./SelectPriority\";\nimport { InputDeadline } from \"./InputDeadline\";\nimport { MoreOptions } from \"./MoreOptions\";\nimport styles from \"./styles/Task.module.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport const Task = props => {\n  _s();\n  const {\n    task,\n    setTasks,\n    setListGroup,\n    setModalData,\n    setIsModalOpen\n  } = props;\n  const taskRef = useRef(null);\n  const [isHovered, setIsHovered] = useState(false);\n  useEffect(() => {\n    const handleMouseEnter = () => {\n      setIsHovered(true);\n    };\n    const handleMouseLeave = () => {\n      setIsHovered(false);\n    };\n    const target = taskRef.current;\n    if (target) {\n      target.addEventListener(\"mouseenter\", handleMouseEnter);\n      target.addEventListener(\"mouseleave\", handleMouseLeave);\n      return () => {\n        if (target) {\n          target.removeEventListener(\"mouseenter\", handleMouseEnter);\n          target.removeEventListener(\"mouseleave\", handleMouseLeave);\n        }\n      };\n    }\n  }, []);\n  const handleToggleIsComplete = () => {\n    setTasks(prevTasks => {\n      let index = -1;\n      const newTasks = prevTasks.map((prevTask, mapIndex) => {\n        if (prevTask.taskId === task.taskId) {\n          index = mapIndex;\n          return {\n            ...prevTask,\n            isComplete: !prevTask.isComplete,\n            lastUpdated: new Date()\n          };\n        } else {\n          return prevTask;\n        }\n      });\n      if (index !== -1) {\n        const [updatedTask] = newTasks.splice(index, 1);\n        newTasks.unshift(updatedTask);\n      }\n      return newTasks;\n    });\n  };\n  const handleUpdateTaskInfo = e => {\n    const {\n      name,\n      value\n    } = e.target;\n    const taskId = e.target.dataset.taskId;\n    setTasks(prevTasks => prevTasks.map(prevTask => prevTask.taskId === taskId ? {\n      ...prevTask,\n      [name]: value,\n      lastUpdated: new Date()\n    } : prevTask));\n  };\n  const handleKeyDown = e => {\n    if (e.key === \"Enter\") e.target.blur();\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    ref: taskRef,\n    className: styles.wrapper,\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: styles.contentWrapper,\n      children: [/*#__PURE__*/_jsxDEV(InputCheckbox, {\n        isComplete: task.isComplete,\n        handleToggleIsComplete: handleToggleIsComplete\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 84,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(InputTitle, {\n        task: task,\n        handleUpdateTaskInfo: handleUpdateTaskInfo,\n        handleKeyDown: handleKeyDown\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 88,\n        columnNumber: 9\n      }, this), isHovered && /*#__PURE__*/_jsxDEV(MoreOptions, {\n        list: null,\n        setListGroup: setListGroup,\n        task: task,\n        setTasks: setTasks,\n        setIsModalOpen: setIsModalOpen,\n        setModalData: setModalData,\n        isHovered: isHovered\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 94,\n        columnNumber: 11\n      }, this), (!task.isComplete || task.isComplete && isHovered) && /*#__PURE__*/_jsxDEV(SelectPriority, {\n        task: task,\n        handleUpdateTaskInfo: handleUpdateTaskInfo\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 105,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 83,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: styles.inputDeadlineWrapper,\n      children: task.deadline && /*#__PURE__*/_jsxDEV(InputDeadline, {\n        task: task,\n        handleUpdateTaskInfo: handleUpdateTaskInfo\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 113,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 111,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 82,\n    columnNumber: 5\n  }, this);\n};\n_s(Task, \"ifyWXg2LYlMpKOZX04wVef0YjFI=\");\n_c = Task;\nvar _c;\n$RefreshReg$(_c, \"Task\");","map":{"version":3,"names":["React","useEffect","useRef","useState","InputCheckbox","InputTitle","SelectPriority","InputDeadline","MoreOptions","styles","jsxDEV","_jsxDEV","Task","props","_s","task","setTasks","setListGroup","setModalData","setIsModalOpen","taskRef","isHovered","setIsHovered","handleMouseEnter","handleMouseLeave","target","current","addEventListener","removeEventListener","handleToggleIsComplete","prevTasks","index","newTasks","map","prevTask","mapIndex","taskId","isComplete","lastUpdated","Date","updatedTask","splice","unshift","handleUpdateTaskInfo","e","name","value","dataset","handleKeyDown","key","blur","ref","className","wrapper","children","contentWrapper","fileName","_jsxFileName","lineNumber","columnNumber","list","inputDeadlineWrapper","deadline","_c","$RefreshReg$"],"sources":["/Users/hiroaki/github.com/Python_practice/todo-env/frontend/src/components/Task.jsx"],"sourcesContent":["import React, { useEffect, useRef, useState } from \"react\";\nimport { InputCheckbox } from \"./InputCheckbox\";\nimport { InputTitle } from \"./InputTitle\";\nimport { SelectPriority } from \"./SelectPriority\";\nimport { InputDeadline } from \"./InputDeadline\";\nimport { MoreOptions } from \"./MoreOptions\";\nimport styles from \"./styles/Task.module.css\";\n\nexport const Task = (props) => {\n  const { task, setTasks, setListGroup, setModalData, setIsModalOpen } = props;\n  const taskRef = useRef(null);\n  const [isHovered, setIsHovered] = useState(false);\n\n  useEffect(() => {\n    const handleMouseEnter = () => {\n      setIsHovered(true);\n    };\n\n    const handleMouseLeave = () => {\n      setIsHovered(false);\n    };\n\n    const target = taskRef.current;\n\n    if (target) {\n      target.addEventListener(\"mouseenter\", handleMouseEnter);\n      target.addEventListener(\"mouseleave\", handleMouseLeave);\n\n      return () => {\n        if (target) {\n          target.removeEventListener(\"mouseenter\", handleMouseEnter);\n          target.removeEventListener(\"mouseleave\", handleMouseLeave);\n        }\n      };\n    }\n  }, []);\n\n  const handleToggleIsComplete = () => {\n    setTasks((prevTasks) => {\n      let index = -1;\n\n      const newTasks = prevTasks.map((prevTask, mapIndex) => {\n        if (prevTask.taskId === task.taskId) {\n          index = mapIndex;\n          return {\n            ...prevTask,\n            isComplete: !prevTask.isComplete,\n            lastUpdated: new Date(),\n          };\n        } else {\n          return prevTask;\n        }\n      });\n\n      if (index !== -1) {\n        const [updatedTask] = newTasks.splice(index, 1);\n        newTasks.unshift(updatedTask);\n      }\n\n      return newTasks;\n    });\n  };\n\n  const handleUpdateTaskInfo = (e) => {\n    const { name, value } = e.target;\n    const taskId = e.target.dataset.taskId;\n\n    setTasks((prevTasks) =>\n      prevTasks.map((prevTask) =>\n        prevTask.taskId === taskId\n          ? { ...prevTask, [name]: value, lastUpdated: new Date() }\n          : prevTask\n      )\n    );\n  };\n\n  const handleKeyDown = (e) => {\n    if (e.key === \"Enter\") e.target.blur();\n  };\n\n  return (\n    <div ref={taskRef} className={styles.wrapper}>\n      <div className={styles.contentWrapper}>\n        <InputCheckbox\n          isComplete={task.isComplete}\n          handleToggleIsComplete={handleToggleIsComplete}\n        />\n        <InputTitle\n          task={task}\n          handleUpdateTaskInfo={handleUpdateTaskInfo}\n          handleKeyDown={handleKeyDown}\n        />\n        {isHovered && (\n          <MoreOptions\n            list={null}\n            setListGroup={setListGroup}\n            task={task}\n            setTasks={setTasks}\n            setIsModalOpen={setIsModalOpen}\n            setModalData={setModalData}\n            isHovered={isHovered}\n          />\n        )}\n        {(!task.isComplete || (task.isComplete && isHovered)) && (\n          <SelectPriority\n            task={task}\n            handleUpdateTaskInfo={handleUpdateTaskInfo}\n          />\n        )}\n      </div>\n      <div className={styles.inputDeadlineWrapper}>\n        {task.deadline && (\n          <InputDeadline\n            task={task}\n            handleUpdateTaskInfo={handleUpdateTaskInfo}\n          />\n        )}\n      </div>\n    </div>\n  );\n};\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}