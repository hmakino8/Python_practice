{"ast":null,"code":"var _jsxFileName = \"/Users/hiroaki/github.com/Python_practice/todo-env/frontend/src/components/TaskList.jsx\";\nimport { ButtonAddTask } from \"./ButtonAddTask\";\nimport { TasksIncomplete } from \"./TasksIncomplete.jsx\";\nimport { TasksComplete } from \"./TasksComplete.jsx\";\nimport { generateId } from \"../utils/utils\";\nimport { initModalData } from \"../utils/initializer\";\nimport { MoreOptions } from \"./MoreOptions\";\nimport styles from \"./styles/TaskList.module.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport const TaskList = props => {\n  const {\n    list,\n    setTasks,\n    setListGroup,\n    modalData,\n    setIsModalOpen,\n    setModalData\n  } = props;\n  const countTaskComplete = list.tasks.filter(task => task.isComplete).length;\n  const handleAddTaskClick = e => {\n    const listId = e.target.dataset.listId;\n    setTasks(tasks => [{\n      ...initModalData(),\n      listId: listId,\n      taskId: generateId(),\n      priority: \"Low\",\n      dateCreated: new Date(),\n      lastUpdated: new Date()\n    }, ...tasks]);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: styles.container,\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: styles.titleWrapper,\n      children: [/*#__PURE__*/_jsxDEV(\"p\", {\n        className: styles.listName,\n        children: list.listName\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 40,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(MoreOptions, {\n        list: list,\n        setListGroup: setListGroup,\n        task: null,\n        setTasks: null,\n        setIsModalOpen: null,\n        setModalData: null\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 41,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(ButtonAddTask, {\n      list: list,\n      handleAddTaskClick: handleAddTaskClick\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(TasksIncomplete, {\n      list: list,\n      setTasks: setTasks,\n      setListGroup: setListGroup,\n      modalData: modalData,\n      setModalData: setModalData,\n      setIsModalOpen: setIsModalOpen\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 7\n    }, this), countTaskComplete > 0 && /*#__PURE__*/_jsxDEV(TasksComplete, {\n      list: list,\n      setTasks: setTasks,\n      modalData: modalData,\n      setListGroup: setListGroup,\n      setModalData: setModalData,\n      setIsModalOpen: setIsModalOpen,\n      countTaskComplete: countTaskComplete\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 38,\n    columnNumber: 5\n  }, this);\n};\n_c = TaskList;\nvar _c;\n$RefreshReg$(_c, \"TaskList\");","map":{"version":3,"names":["ButtonAddTask","TasksIncomplete","TasksComplete","generateId","initModalData","MoreOptions","styles","jsxDEV","_jsxDEV","TaskList","props","list","setTasks","setListGroup","modalData","setIsModalOpen","setModalData","countTaskComplete","tasks","filter","task","isComplete","length","handleAddTaskClick","e","listId","target","dataset","taskId","priority","dateCreated","Date","lastUpdated","className","container","children","titleWrapper","listName","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["/Users/hiroaki/github.com/Python_practice/todo-env/frontend/src/components/TaskList.jsx"],"sourcesContent":["import { ButtonAddTask } from \"./ButtonAddTask\";\nimport { TasksIncomplete } from \"./TasksIncomplete.jsx\";\nimport { TasksComplete } from \"./TasksComplete.jsx\";\nimport { generateId } from \"../utils/utils\";\nimport { initModalData } from \"../utils/initializer\";\nimport { MoreOptions } from \"./MoreOptions\";\nimport styles from \"./styles/TaskList.module.css\";\n\nexport const TaskList = (props) => {\n  const {\n    list,\n    setTasks,\n    setListGroup,\n    modalData,\n    setIsModalOpen,\n    setModalData,\n  } = props;\n\n  const countTaskComplete = list.tasks.filter((task) => task.isComplete).length;\n\n  const handleAddTaskClick = (e) => {\n    const listId = e.target.dataset.listId;\n\n    setTasks((tasks) => [\n      {\n        ...initModalData(),\n        listId: listId,\n        taskId: generateId(),\n        priority: \"Low\",\n        dateCreated: new Date(),\n        lastUpdated: new Date(),\n      },\n      ...tasks,\n    ]);\n  };\n\n  return (\n    <div className={styles.container}>\n      <div className={styles.titleWrapper}>\n        <p className={styles.listName}>{list.listName}</p>\n        <MoreOptions\n          list={list}\n          setListGroup={setListGroup}\n          task={null}\n          setTasks={null}\n          setIsModalOpen={null}\n          setModalData={null}\n        />\n      </div>\n      <ButtonAddTask list={list} handleAddTaskClick={handleAddTaskClick} />\n      <TasksIncomplete\n        list={list}\n        setTasks={setTasks}\n        setListGroup={setListGroup}\n        modalData={modalData}\n        setModalData={setModalData}\n        setIsModalOpen={setIsModalOpen}\n      />\n      {countTaskComplete > 0 && (\n        <TasksComplete\n          list={list}\n          setTasks={setTasks}\n          modalData={modalData}\n          setListGroup={setListGroup}\n          setModalData={setModalData}\n          setIsModalOpen={setIsModalOpen}\n          countTaskComplete={countTaskComplete}\n        />\n      )}\n    </div>\n  );\n};\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}