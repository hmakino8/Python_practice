{"ast":null,"code":"var _jsxFileName = \"/Users/hiroaki/github.com/Python_practice/todo-env/frontend/src/layout/Dashboard.jsx\",\n  _s = $RefreshSig$();\nimport React, { useEffect } from \"react\";\nimport { searchEngine } from \"../hooks/searchEngine\";\nimport { TaskList } from \"../components/TaskList\";\nimport classNames from \"classnames\";\nimport styles from \"./styles/Dashboard.module.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport const Dashboard = props => {\n  _s();\n  const {\n    tasks,\n    setTasks,\n    modalData,\n    setIsModalOpen,\n    setModalData,\n    listGroup,\n    setListGroup,\n    isMenuOpen,\n    searchKey\n  } = props;\n  const newListGroup = searchEngine(searchKey, listGroup);\n  useEffect(() => {\n    if (!tasks) return;\n    setListGroup(prevListGroup => prevListGroup.map(list => {\n      var _list$isDefault;\n      const newTasks = tasks.filter(task => list.listId === task.listId);\n      return {\n        ...list,\n        tasks: [...newTasks],\n        isDefault: (_list$isDefault = list.isDefault) !== null && _list$isDefault !== void 0 ? _list$isDefault : false\n      };\n    }));\n  }, [tasks, setListGroup]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: classNames(styles.container, {\n      [styles.menuOpen]: isMenuOpen,\n      [styles.menuClose]: !isMenuOpen\n    }),\n    children: newListGroup.map(list => list.isDisplay && /*#__PURE__*/_jsxDEV(TaskList, {\n      list: list,\n      setTasks: setTasks,\n      setListGroup: setListGroup,\n      modalData: modalData,\n      setIsModalOpen: setIsModalOpen,\n      setModalData: setModalData\n    }, list.listId, false, {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 13\n    }, this))\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 39,\n    columnNumber: 5\n  }, this);\n};\n_s(Dashboard, \"OD7bBpZva5O2jO+Puf00hKivP7c=\");\n_c = Dashboard;\nvar _c;\n$RefreshReg$(_c, \"Dashboard\");","map":{"version":3,"names":["React","useEffect","searchEngine","TaskList","classNames","styles","jsxDEV","_jsxDEV","Dashboard","props","_s","tasks","setTasks","modalData","setIsModalOpen","setModalData","listGroup","setListGroup","isMenuOpen","searchKey","newListGroup","prevListGroup","map","list","_list$isDefault","newTasks","filter","task","listId","isDefault","className","container","menuOpen","menuClose","children","isDisplay","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["/Users/hiroaki/github.com/Python_practice/todo-env/frontend/src/layout/Dashboard.jsx"],"sourcesContent":["import React, { useEffect } from \"react\";\nimport { searchEngine } from \"../hooks/searchEngine\";\nimport { TaskList } from \"../components/TaskList\";\nimport classNames from \"classnames\";\nimport styles from \"./styles/Dashboard.module.css\";\n\nexport const Dashboard = (props) => {\n  const {\n    tasks,\n    setTasks,\n    modalData,\n    setIsModalOpen,\n    setModalData,\n    listGroup,\n    setListGroup,\n    isMenuOpen,\n    searchKey,\n  } = props;\n\n  const newListGroup = searchEngine(searchKey, listGroup);\n\n  useEffect(() => {\n    if (!tasks) return;\n\n    setListGroup((prevListGroup) =>\n      prevListGroup.map((list) => {\n        const newTasks = tasks.filter((task) => list.listId === task.listId);\n\n        return {\n          ...list,\n          tasks: [...newTasks],\n          isDefault: list.isDefault ?? false,\n        };\n      })\n    );\n  }, [tasks, setListGroup]);\n\n  return (\n    <div\n      className={classNames(styles.container, {\n        [styles.menuOpen]: isMenuOpen,\n        [styles.menuClose]: !isMenuOpen,\n      })}\n    >\n      {newListGroup.map(\n        (list) =>\n          list.isDisplay && (\n            <TaskList\n              key={list.listId}\n              list={list}\n              setTasks={setTasks}\n              setListGroup={setListGroup}\n              modalData={modalData}\n              setIsModalOpen={setIsModalOpen}\n              setModalData={setModalData}\n            />\n          )\n      )}\n    </div>\n  );\n};\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,SAAS,QAAQ,OAAO;AACxC,SAASC,YAAY,QAAQ,uBAAuB;AACpD,SAASC,QAAQ,QAAQ,wBAAwB;AACjD,OAAOC,UAAU,MAAM,YAAY;AACnC,OAAOC,MAAM,MAAM,+BAA+B;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEnD,OAAO,MAAMC,SAAS,GAAIC,KAAK,IAAK;EAAAC,EAAA;EAClC,MAAM;IACJC,KAAK;IACLC,QAAQ;IACRC,SAAS;IACTC,cAAc;IACdC,YAAY;IACZC,SAAS;IACTC,YAAY;IACZC,UAAU;IACVC;EACF,CAAC,GAAGV,KAAK;EAET,MAAMW,YAAY,GAAGlB,YAAY,CAACiB,SAAS,EAAEH,SAAS,CAAC;EAEvDf,SAAS,CAAC,MAAM;IACd,IAAI,CAACU,KAAK,EAAE;IAEZM,YAAY,CAAEI,aAAa,IACzBA,aAAa,CAACC,GAAG,CAAEC,IAAI,IAAK;MAAA,IAAAC,eAAA;MAC1B,MAAMC,QAAQ,GAAGd,KAAK,CAACe,MAAM,CAAEC,IAAI,IAAKJ,IAAI,CAACK,MAAM,KAAKD,IAAI,CAACC,MAAM,CAAC;MAEpE,OAAO;QACL,GAAGL,IAAI;QACPZ,KAAK,EAAE,CAAC,GAAGc,QAAQ,CAAC;QACpBI,SAAS,GAAAL,eAAA,GAAED,IAAI,CAACM,SAAS,cAAAL,eAAA,cAAAA,eAAA,GAAI;MAC/B,CAAC;IACH,CAAC,CACH,CAAC;EACH,CAAC,EAAE,CAACb,KAAK,EAAEM,YAAY,CAAC,CAAC;EAEzB,oBACEV,OAAA;IACEuB,SAAS,EAAE1B,UAAU,CAACC,MAAM,CAAC0B,SAAS,EAAE;MACtC,CAAC1B,MAAM,CAAC2B,QAAQ,GAAGd,UAAU;MAC7B,CAACb,MAAM,CAAC4B,SAAS,GAAG,CAACf;IACvB,CAAC,CAAE;IAAAgB,QAAA,EAEFd,YAAY,CAACE,GAAG,CACdC,IAAI,IACHA,IAAI,CAACY,SAAS,iBACZ5B,OAAA,CAACJ,QAAQ;MAEPoB,IAAI,EAAEA,IAAK;MACXX,QAAQ,EAAEA,QAAS;MACnBK,YAAY,EAAEA,YAAa;MAC3BJ,SAAS,EAAEA,SAAU;MACrBC,cAAc,EAAEA,cAAe;MAC/BC,YAAY,EAAEA;IAAa,GANtBQ,IAAI,CAACK,MAAM;MAAAQ,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAOjB,CAEP;EAAC;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACE,CAAC;AAEV,CAAC;AAAC7B,EAAA,CAtDWF,SAAS;AAAAgC,EAAA,GAAThC,SAAS;AAAA,IAAAgC,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}